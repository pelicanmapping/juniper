/* -*-c++-*- */
/* osgJuniper - Large Dataset Visualization Toolkit for OpenSceneGraph
* Copyright 2010-2011 Pelican Ventures, Inc.
* http://wush.net/trac/juniper
*
* osgJuniper is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/

#ifndef OSGJUNIPERMAP_IMAGEOVERLAYPRIMITIVE_H
#define OSGJUNIPERMAP_IMAGEOVERLAYPRIMITIVE_H 1

#include <osgJuniperMap/Common>
#include <osgJuniperMap/Primitive>
#include <osgEarthAnnotation/ImageOverlay>
#include <osgEarthAnnotation/ImageOverlayEditor>

namespace osgJuniper { namespace Map {

    class OSGJUNIPERMAP_EXPORT ImageOverlayPrimitive : public Primitive
    {
    public:
        ImageOverlayPrimitive(PrimitiveId id);

        virtual const char* className() const { return "ImageOverlayPrimitive"; } 

        const std::string& getFilename() const;
        void setFilename(const std::string& filename);

        osg::Image* getImage() const;
        void setImage( osg::Image* image );

        virtual void setMapContext(MapContext* context);

        bool getEdit() const;
        void setEdit(bool edit);

        osgEarth::Annotation::ImageOverlay* getOverlay() { return _overlay.get(); }

        virtual void setProperty(const std::string& name, const std::string& value);
        virtual void setProperty(const std::string& name, double value);      
        virtual void setProperty(const std::string& name, int value);
        virtual void setProperty(const std::string& name, bool value);        
        virtual void setProperty(const std::string& name, const LocationList& locations);        

    protected:        

        void updateEditorVisibility();
        osg::ref_ptr< osgEarth::Annotation::ImageOverlay > _overlay;        
        osg::ref_ptr< osgEarth::Annotation::ImageOverlayEditor> _editor;
        std::string _filename;
        bool   _edit;

        osg::Vec2d _lowerLeft, _lowerRight, _upperLeft, _upperRight;
        float _alpha;
        osg::ref_ptr< osg::Image > _image;
    };


}}
#endif