/* -*-c++-*- */
/* osgJuniper - Large Dataset Visualization Toolkit for OpenSceneGraph
* Copyright 2010-2011 Pelican Ventures, Inc.
* http://wush.net/trac/juniper
*
* osgJuniper is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/

#ifndef OSGJUNIPERMAP_TEXTPRIMITIVE_H
#define OSGJUNIPERMAP_TEXTPRIMITIVE_H 1

#include <osgJuniperMap/Common>
#include <osgJuniperMap/Primitive>
#include <osg/MatrixTransform>
#include <osg/AutoTransform>
#include <osgText/Text>

namespace osgJuniper { namespace Map {

    using namespace osgEarth;

    class OSGJUNIPERMAP_EXPORT TextPrimitive : public Primitive
    {
    public:
        TextPrimitive(PrimitiveId id);

        virtual const char* className() const { return "TextPrimitive"; }

        const osg::Vec2& getScreenPosition() const;
        void setScreenPosition( const osg::Vec2& position );  

		void setPrimitiveType(PrimitiveType type);

        const Location& getLocation() const;
        void setLocation(const Location& location);

        AltitudeMode getAltitudeMode() const;
        void setAltitudeMode(AltitudeMode altitudeMode);

        virtual void setMapContext(MapContext* context);

        virtual void setEnableClusterCulling(bool enableClusterCulling);

        const std::string& getText() const;
        void setText( const std::string& text );

        const std::string& getFont() const;
        void setFont( const std::string& font);

        void setForegroundColor( const osg::Vec4& color );
        const osg::Vec4& getForegroundColor() const;

        void setBackgroundColor( const osg::Vec4& color );
        const osg::Vec4& getBackgroundColor() const;

        void setOutlineColor( const osg::Vec4& color );
        const osg::Vec4& getOutlineColor() const;

        float getRotation() const;
        void setRotation(float rotation);

        float getSize() const;
        void setSize( float size);

        float getAlpha() const;
        void setAlpha(float alpha);

        osgText::Text* getTextDrawable() { return _drawable.get(); }

        virtual void terrainChanged(const osgEarth::TileKey& tileKey, osgEarth::TerrainEngineNode* terrain);

        virtual void setProperty(const std::string& name, const osg::Vec3d& value);
        virtual void setProperty(const std::string& name, int    value);
        virtual void setProperty(const std::string& name, const std::string& value);
        virtual void setProperty(const std::string& name, double value);
		virtual void setProperty(const std::string& name, const LocationList& locations);
		virtual void setProperty(const std::string& name, const std::vector< osg::Vec2 > value);

        virtual void setProperty(const std::string& name, const std::vector< osg::Vec3 > value) {}
        virtual void setProperty(const std::string& name, const std::vector< int > value) {}

    protected:

        void updateTransform(osg::Node* terrain = 0);

        void initBackground();

        ~TextPrimitive();
        Location _location;
		osg::Vec2 _screenPosition; 
        AltitudeMode _altitudeMode;

        osg::Vec4 _fgColor;
        osg::Vec4 _bgColor;
        osg::Vec4 _outlineColor;        
        float _alpha;
        std::string _text;
        std::string _font;
        float _rotation;
        float _size;

        osg::ref_ptr< osg::MatrixTransform > _transform;
        osg::ref_ptr< osgText::Text > _drawable;
        osg::ref_ptr< osg::Geode > _geode;

        osg::ref_ptr< osg::AutoTransform > _backgroundTransform;        
    };


}}
#endif