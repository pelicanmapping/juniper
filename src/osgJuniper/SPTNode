/* -*-c++-*- */
/* osgJuniper - Large Dataset Visualization Toolkit for OpenSceneGraph
* Copyright 2010-2017 Pelican Mapping
* Pelican Mapping CONFIDENTIAL
* Copyright (c) 2010-2017 [Pelican Mapping], All Rights Reserved.
*
* NOTICE:  All information contained herein is, and remains the property of Pelican Mapping. The intellectual and technical concepts contained
* herein are proprietary to Pelican Mapping and may be covered by U.S. and Foreign Patents, patents in process, and are protected by trade secret or copyright law.
* Dissemination of this information or reproduction of this material is strictly forbidden unless prior written permission is obtained
* from Pelican Mapping.  Access to the source code contained herein is hereby forbidden to anyone except current Pelican Mapping employees, managers or contractors who have executed
* Confidentiality and Non-disclosure agreements explicitly covering such access.
*
* The copyright notice above does not evidence any actual or intended publication or disclosure  of  this source code, which includes
* information that is confidential and/or proprietary, and is a trade secret, of Pelican Mapping.   ANY REPRODUCTION, MODIFICATION, DISTRIBUTION, PUBLIC  PERFORMANCE,
* OR PUBLIC DISPLAY OF OR THROUGH USE  OF THIS  SOURCE CODE  WITHOUT  THE EXPRESS WRITTEN CONSENT OF PELICAN MAPPING IS STRICTLY PROHIBITED, AND IN VIOLATION OF APPLICABLE
* LAWS AND INTERNATIONAL TREATIES.  THE RECEIPT OR POSSESSION OF  THIS SOURCE CODE AND/OR RELATED INFORMATION DOES NOT CONVEY OR IMPLY ANY RIGHTS
* TO REPRODUCE, DISCLOSE OR DISTRIBUTE ITS CONTENTS, OR TO MANUFACTURE, USE, OR SELL ANYTHING THAT IT  MAY DESCRIBE, IN WHOLE OR IN PART.
*/
#ifndef OSGJUNIPER_SPTNODE
#define OSGJUNIPER_SPTNODE 1

#include <osgJuniper/Common>
#include <osg/Geode>
#include <osg/Geometry>
#include <osgJuniper/Point>

namespace osgJuniper
{
    /**
     * Experimental class that implements the Sequential Point Tree algorithm as described in 
     * http://www.vis.uni-stuttgart.de/~dachsbcn/download/spt.pdf
     */
    class OSGJUNIPER_EXPORT SPTNode : public osg::Geode
    {
    public:
        SPTNode();
        void setPoints( PointList &points );

        void setRadiusFactor( float radiusFactor );
        float getRadiusFactor() const;

        void setEnabled( bool enabled);
        bool getEnabled() const;

        unsigned int getMaxVerts() const;
        void setMaxVerts(unsigned int maxVerts);


        virtual void traverse(osg::NodeVisitor &nv);

    protected:
        float _radiusFactor;
        osg::Geometry *_geometry;
        osg::Vec3Array* _verts;
        osg::Vec4ubArray* _colors;
        osg::Vec3Array* _normals;
        typedef std::map< float, int> RangeMap;
        RangeMap _rangeMap;
        osg::DrawArrays* _drawArrays;
        bool _enabled;
        unsigned int _maxVerts;
    };

} // namespace osgJuniper

#endif // OSGJUNIPER_SPTNODE


